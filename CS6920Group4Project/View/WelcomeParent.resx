<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAIABoBAAAJgAAACAgAAAAACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAEAE
        AAAAAAAAAAAAAAAAAAAAAAAA////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////AQlYGhMIURh5B0kW0QZBE/kGOxHpBjcQS///
        /wH///8B////Af///wH///8B////Af///wH///8B////AQpgHQUJWRt7CVUZ0QhQGP8HShb/BkIU/wY5
        EeUFNRCLBTUQCf///wH///8B////Af///wH///8B////Af///wEKZR6nCl8cpQlcGz8JWRp3CVca/whQ
        GP8HRBT/BjkR/wU0EL8GNRAL////Af///wH///8B////Af///wH///8BC20g7QplHv8KYR3/CmIdkwph
        HZkJXRz/CFMZ/wdDFP8FOBH/BTQQnf///wH///8B////Af///wH///8B////ARR4KvsLcCH/C2kf/wtn
        H/8LaB+tCmYe9wleHP8IUBj/BkAT/wU2EP0GNhAl////Af///wH///8B////Af///wEshkD9HH0y/w1z
        JP8LbSH/C2wg/wtrIP0KZh//CVob/wdKFv8GOxHzBjYQLf///wH///8B////Af///wH///8BRJNV7zeN
        Sv8igTf/EXYn/wxxIv8LbyH/C2sg/wpiHf8IUxn/BkIT/wY3ENEGNxAH////Af///wH///8B////AVae
        ZslQm2H/PZBP/yaDO/8WeSz/DXQk/wtwIv8KaR//CVsb/wdJFv8GOxH/BjYQc////wH///8B////Af//
        /wFkpnN3ZKZz/1afZv8/kVL/K4U//xt9Mf8Rdyf/C28h/wpkHv8IUxn/BkIU/wY5EeMGOxID////Af//
        /wH///8Baal4BW+sfY9rqnn/WqBp/0WVVv8zikb/JYI6/xd6Lf8MbyL/Cl8c/whNF/8GQBP/Bj4SQf//
        /wH///8B////Af///wF0r4ELd7GE3XCtfv9ipXD/UZth/0OTVP80i0f/IH81/w1vIv8KXBz/CE0X/wdI
        Fnf///8B////Af///wH///8B////AXqyhit7tIjld7GE/26sfP9jpnL/V59n/0SUVv8ohDz/DnAk/wpf
        HP8JVxqT////Af///wH///8B////Af///wH///8Be7SIF3y0iaN7s4eXd7GE13Gufv9kpnL/TJhd/yuG
        P/8PcyX/Cmkfh////wH///8B////Af///wH///8B////Af///wH///8B////AXuzhwV4soRRcK19pV+j
        bctElFXBJII5jw51JRv///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AQAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8oAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAA////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////AQhP
        GCUISxeFB0cVwQdCFOcGPhP/BjwS7QY6EbsGOREz////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////AQlY
        GkkJVBnBCFAY/whMF/8ISRb/B0UV/wdBE/8GPRL/BjoR/wY3EesGNhAP////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////AQpg
        HRUKXBzBCVgb/wlWGv8JUxn/CFAY/whNF/8ISRb/B0UV/wdBFP8GPRL/BjkR5QY2ELEFNRBX////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wEJWhstCVcaZwlWGuEJVBn/CVIZ/whQGP8ITBf/B0gW/wdCFP8GPRP/BjkR/wY2
        EP8FNBDTBTUQH////wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////AQtmH1cKYh6ZCl8dbwpcHCX///8BCVkbCQlZG4UJWBr9CVYa/wlTGf8ITxj/CEoW/wdE
        FP8GPhP/BjkR/wY1EP8FMxDlBTUQK////wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8BC2kgsQplHv8KYR3/Cl8d/wpdHLcKXBw5////AQpdHFsKXBz9CVob/wlX
        Gv8IURn/CEwX/wdFFf8GPhP/BjkR/wU1EP8FNBDtBjUQK////wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wELbSHNC2kg/wplHv8KYh7/CmAd/wpgHf8KYB2TCmAdAwpg
        HYUKYB3/Cl0c/wlZG/8JUxn/CEwX/wdEFf8GPRP/BjgR/wU1EP8FNBDVBjcQDf///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////AQxxIucLbiH/C2og/wtmH/8KZB7/CmMe/wpj
        Hv8KZB63CmQeDwpkHs8KYh7/Cl8d/wlaG/8JUxn/CEsX/wdDFP8GPBL/BjcR/wU1EP8GNRCX////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BEnco8wxzI/8LbyH/C2sg/wto
        H/8LZh//C2Yf/wtmH/8LZx+9C2cfUQtmH/8KYx7/Cl8d/wlZG/8IURn/CEkW/wdBFP8GOxL/BjYQ/wU1
        EP0GNxE5////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wEefjP/Fnos/w11
        JP8McSL/C20h/wtqIP8LaSD/C2kg/wtpIP8LaSCrC2kg3wtnH/8KZB7/Cl4c/wlXGv8ITxj/B0cV/wY/
        E/8GORH/BjYQ9wY2EFv///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////ASqF
        Pv8kgjn/G30x/xF3J/8MciL/C28h/wtsIf8LayD/C2sg/wtrIP8LayD3C2og/wtnH/8KYx7/Clwc/wlU
        Gf8ITBf/B0MU/wY8Ev8GNxHTBjYQDf///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BNYtI+TCJRP8phD3/Hn4z/xR4Kv8MdCP/DHAi/wtuIf8LbSH/C20h/wttIf8LbCH/C2og/wtm
        H/8KYB3/CVkb/whRGP8HSBb/B0AT/wY5Ef8GNhCp////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wFAklLtPpBQ/zaMSf8sh0D/IYA2/xZ6LP8OdSX/DHIi/wxwIv8MbyL/C28h/wtu
        If8LbCH/C2kg/wpkHv8KXRz/CVUa/whMF/8HRBT/BjwS/wY3Ef8GNhBb////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AUqXW9VJl1r/Q5RV/zqOTP8viEP/JII5/xl8L/8Sdyj/DHQj/wxy
        Iv8McSL/DHAi/wtvIf8LayD/C2cf/wphHf8JWhv/CFEY/wdIFv8HQBP/BjkR/wY2EO0GNxAb////Af//
        /wH///8B////Af///wH///8B////Af///wH///8BU5xjsVOcY/9Pml//R5ZY/z2QT/8xiUX/JoM6/xt9
        Mf8VeSv/D3Ym/wx0I/8MciL/DHEi/wtuIf8LaiD/CmUe/wpeHP8JVRr/CEwX/wdDFP8GPBL/BjcR/wY2
        EKP///8B////Af///wH///8B////Af///wH///8B////Af///wFaoWp5XKJr/1qhav9TnWT/Spdb/z6Q
        UP8yikb/KIQ8/x5+M/8Weiz/Enco/w11JP8McyP/DHAi/wttIf8LaB//CmEd/wlZG/8IUBj/B0cW/wdA
        E/8GOhH/BjcR/QY3ESv///8B////Af///wH///8B////Af///wH///8B////AV6jbStjpnL/Y6Zy/16j
        bf9Wn2b/TJld/z+RUv80i0f/KoU+/yGANv8ZfC//FXkr/xB2Jv8MdCP/DHAi/wtrIP8KZR//Cl4c/wlV
        Gv8ITBf/B0MU/wY9Ev8GORH/BjgRnf///wH///8B////Af///wH///8B////Af///wH///8B////AWeo
        drFpqXj/Z6h2/2GlcP9Xn2f/TJld/0CSUv81i0j/LIdA/ySCOf8dfjP/F3st/xJ3KP8MdCP/DG8i/wtq
        IP8KYx7/CVsb/whRGf8HSBb/B0EU/wY8Ev8GOhHzBjsSDf///wH///8B////Af///wH///8B////Af//
        /wH///8Baal4FW6sfKVurHzzaqp4/2Omcv9ZoGn/T5pf/0OUVf85jkz/L4hD/ymEPf8igTf/G30x/xZ5
        LP8NdST/DG8i/wtpIP8KYB3/CVca/whOGP8HRhX/B0AT/wY9Ev8GPRJb////Af///wH///8B////Af//
        /wH///8B////Af///wH///8BcK1+A3OvgKNyrn//bax7/2andP9comv/Upxi/0eWWP8+kFD/NoxJ/y+I
        Q/8phD3/IYA2/xl8L/8Pdib/C28h/wtnH/8KXhz/CVUa/whMF/8HRRX/B0EU/wdAE6X///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8BdK+BJ3exhPl1sIL/cK1+/2ipd/9gpG//Vp9m/06a
        X/9FlVf/PpBQ/ziNS/8wiUT/KYQ9/x5+M/8Rdyf/C28h/wtmH/8KXRz/CVQZ/whMF/8HRxX/B0UV2///
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BeLKEe3qzhv94soT/c6+A/2yr
        ev9mp3T/XaJs/1WeZf9Pml//SJZZ/0CSUv85jkz/L4hD/yOBOP8TeCn/C28h/wtmH/8KXBz/CVUa/whP
        GP8ITBf9CEsXB////wH///8B////Af///wH///8B////Af///wH///8B////Af///wF2sYMDe7OHo3y0
        if97s4f/d7GE/3Gufv9rq3n/Zqd0/1+jbv9ZoGn/U5xj/0uYXP9Bk1P/NYtI/yeDO/8WeSz/DG8i/wtm
        H/8KXhz/CVca/wlTGf8IUhkf////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wF3sYQDe7SImX21iv98tIn/erOG/3exhP9yrn//bax7/2ipd/9jpnL/XKJr/1OdZP9Jl1r/O49N/yqF
        P/8Yey7/DHEi/wtoH/8KYR3/Clwc/wlaGy3///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8Be7SIV3y0ifF9tYr/fLSJ53qzhtV3sYT/dK+B/3Ctfv9qqnj/Y6Zy/1mg
        af9NmV7/PpBQ/yyHQP8ZfC//DHIi/wtqIP8KZR7/CmIeGf///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8BebKFE3u0iI18tImffLSJA3u0iG96s4bxeLKE/3Sv
        gf9urHz/Zqd0/1uha/9NmV7/PpBQ/yyHQP8afDD/DHQj/wtuIf8LaiAH////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////AXuz
        hxN6s4ZzeLKE03Svgf9trHv/ZKZy/1efZ/9Jl1r/Oo5M/yqFPv8afDDrDnUlaf///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8Bc6+ALW6sfG1nqHWZXaJsmVGbYZlCk1RvNItHTyaDOgP///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>